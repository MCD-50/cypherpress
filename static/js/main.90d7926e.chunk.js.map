{"version":3,"sources":["logo.svg","serviceWorker.js","components/devApp/DelegateInput.js","components/devApp/DataType.js","connections/web3Dev.js","connections/httpInteractions.js","connections/web3Interactions.js","components/devApp/CreateAppForm.js","components/App.js","components/ClientApp/Header.js","connections/ipfsInteractions.js","connections/Controller.js","components/ClientApp/LoginForm.js","components/ClientApp/UploadPanel.js","components/ClientApp/Document.js","components/ClientApp/ViewPanel.js","components/ClientApp/ClientApp.js","components/Router.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","DelegateInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","publicKey","handleChange","usernameRef","current","value","publicKeyRef","toggleButtonState","setDelegateInfo","delegateInfo","console","log","handleBlur","setState","handleFocus","updateUsername","event","target","handleDelegaInfoChange","updatePublicKey","React","createRef","react_default","a","createElement","Form","Group","Control","placeholder","ref","onChange","Component","DataType","labelValue","labelPlaceholder","labelVisible","labelType","handleSelect","handleLabelChange","fieldValue","Fragment","as","web3","Web3","providers","HttpProvider","byteCode","contract","eth","Contract","constant","inputs","name","type","outputs","payable","stateMutability","deployContract","_privateKey","_callingObject","Promise","resolve","reject","address","accounts","privateKeyToAccount","deploy","data","arguments","estimateGas","from","then","_ref","asyncToGenerator","regenerator_default","mark","_callee","gasAmount","gasPrice","gasValue","transaction","bal","requiredEth","gasInEth","wrap","_context","prev","next","getGasPrice","sent","utils","toChecksumAddress","gas","encodeABI","getBalance","fromWei","toString","verifyTransaction","signTransaction","signedTx","sentTx","sendSignedTransaction","raw","rawTransaction","on","receipt","contractAddress","hash","transactionMining","err","catch","error","insufficientFunds","stop","_x","apply","url","generateKeyPairs","content","axios","get","abrupt","alicePrivateKey","alicePrivate","alicePublicKey","alicePublic","aliceSigningKey","aliceSigning","aliceVerifyingKey","aliceVerifying","encryptData","_callee2","_hash","_alicePublicKey","_context2","post","alices_public_key","cipherText","capsule","createPolicy","_callee3","_alicePrivateKey","_aliceSigningKey","_bobPublicKey","_context3","alices_private_key","alices_signing_key","bobs_public_key","policyId","getContractAddress","_x6","_getContractAddress","_callee4","dappName","_context4","setClientJson","_x7","_x8","_setClientJson","_callee5","clientJson","_context5","JSON","stringify","getClientJson","_x9","_getClientJson","_callee6","res","_context6","decryptUploadedDocument","_callee7","_cipherText","_capsule","_context7","decryptDeligatedDocument","_callee8","_aliceVerifyKey","_bobPrivateKey","_policyId","_context8","alices_verifying_key","bobs_private_key","CreateAppForm","delegates","delegateButtonState","dataFields","dataFieldButtonDisabled","dataInfo","fieldName","fieldType","addDelegateInfo","prevState","concat","addDelegate","id","newDelegateprops","map","delegate","idx","objectSpread","button","bool","handleSubmit","clientAppJson","adminPrivateKey","callingObject","preventDefault","appNameRef","localStorage","setItem","adminPrivateKeyRef","transactionName","callback","fetch","method","body","open","newDelegate","length","delegateButton","handleFieldChange","newDataInfo","field","addDataField","newField","_this2","Container","Row","Col","sm","className","onSubmit","controlId","DataType_DataType","key","Button","variant","onClick","disabled","input","DelegateInput_DelegateInput","App","CreateAppForm_CreateAppForm","Header","Navbar","bg","Nav","Item","Link","eventKey","getItem","e","changePanel","contractAbi","connectToContract","_contractAddress","isDeligatee","_documentId","_delegatee","methods","_boolean","getNumberOfDeligatee","_num","getDelegteeUsername","_idx","_name","checkUsernameWeb3","_username","usernameAvailability","signInUser","signUpUsername","to","_x33","getDelegateePublicKey","getNucypherPublicKey","uploadADocument","_callee11","_uploader","_context11","_ref2","_callee10","_context10","signPromise","_ref3","_callee9","_context9","_x35","_x34","deligateDocument","_callee13","_deligatee","_context13","_ref4","_callee12","_context12","_x36","getUploadedDocumentIds","_callee14","_context14","getUploadedDocuments","array","rv","ele","getDeligatedDocumentIds","_callee15","_context15","getDeligatedDocument","getUploadedDocumentInfo","_callee16","_context16","response","verifyKey","getDeligatedDocumentInfo","_callee17","_context17","ipfsNode","IPFS","host","port","protocol","connectNode","uploadJSON","_json","buffer","ipfsResponse","Buffer","add","path","uploadFile","_fileReaderResult","handleUpload","_array","finalJsonToBeUploaded","i","element","isFile","getJson","_x5","_getJson","_path","json","parse","getData","_requestedArray","dataArrayToBereturned","valueJson","objToBePushed","_objToBePushed","push","doConnections","_doConnections","checkUsernameAvailability","_x2","_checkUsernameAvailability","signUpAndGetNucypherKeys","_x3","_x4","_signUpAndGetNucypherKeys","_aliceEthereumPrivateKey","uploadDocument","_x10","_x11","_uploadDocument","grantDocumentAccess","_x12","_x13","_x14","_x15","_x16","_x17","_x18","_grantDocumentAccess","bobPublicKey","fetchUploadedDocuments","_x19","_x20","_x21","_x22","_x23","_fetchUploadedDocuments","_requestedObject","_documentUploadedCallback","arr","ipfsHash","dataArray","fetchDelegatedDouments","_x24","_x25","_x26","_x27","_x28","_x29","_fetchDelegatedDouments","getDelegatees","_getDelegatees","usernames","number","isDelegatee","_x30","_x31","_isDelegatee","LoginForm","setUser","privateKey","privateKeyRef","reload","alert","Label","Text","UploadPanel","formData","generateForm","getDelegates","getDataInfo","addFormFields","newFormData","handleFile","reader","FileReader","readAsArrayBuffer","files","onloadend","readerresult","result","submitForm","obj","fileRef","appName","Document","delegatees","selectedDelegatees","displayData","href","setDelegatees","uploader","aliceEthereumPrivateKey","forEach","delegatee","documentId","fetchDelegatees","allDelegatees","potentialDelegatees","toConsumableArray","indexOf","newDelegates","pop","fetchedData","Check","label","ViewPanel","dataArrays","fetchingLabels","fetchedDataArrays","documentFetchedCallback","documentUploadedCallback","md","Document_Document","ClientApp","panel","appname","setPanel","params","Header_Header","UploadPanel_UploadPanel","ViewPanel_ViewPanel","LoginForm_LoginForm","Router","BrowserRouter","Switch","Route","exact","component","ReactDOM","render","components_Router","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.90d7926e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { PropTypes } from \"react\";\nimport { Form } from \"react-bootstrap\";\nexport default class DelegateInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.usernameRef = React.createRef();\n    this.publicKeyRef = React.createRef();\n  }\n  state = {\n    username: \"\",\n    publicKey: \"\"\n  };\n  handleChange = () => {\n    if (this.usernameRef.current.value && this.publicKeyRef.current.value) {\n      this.props.toggleButtonState(false);\n    } else {\n      this.props.toggleButtonState(true);\n    }\n  };\n\n  setDelegateInfo = () => {\n    const delegateInfo = {};\n    delegateInfo.username = this.usernameRef.current.value;\n    delegateInfo.publicKey = this.publicKeyRef.current.value;\n    console.log(delegateInfo);\n    return delegateInfo;\n  };\n  handleBlur = () => {\n    if (this.usernameRef.current.value && this.publicKeyRef.current.value) {\n      const delegateInfo = this.setDelegateInfo();\n      this.setState({ delegateInfo });\n      this.props.setDelegateInfo(delegateInfo);\n    }\n  };\n  handleFocus = () => {\n    // 1 first find that object in the parent component's state using username or public key\n    // 2 change the username or public key of that particular object dynamically\n  };\n  updateUsername = event => {\n    this.setState({ username: event.target.value });\n    this.handleDelegaInfoChange(event.target.value);\n  };\n  updatePublicKey = event => {\n    this.setState({ publicKey: event.target.value });\n    this.handleDelegaInfoChange(null, event.target.value);\n  };\n  handleDelegaInfoChange = (username, publicKey) => {\n    if (!publicKey) {\n      this.props.handleDelegaInfoChange(username, this.state.publicKey);\n    }\n    if (!username) {\n      this.props.handleDelegaInfoChange(this.state.username, publicKey);\n    }\n  };\n\n  render() {\n    return (\n      <Form.Group>\n        <Form.Control\n          placeholder=\"Enter a delegate's username\"\n          ref={this.usernameRef}\n          onChange={this.updateUsername}\n        />\n\n        <Form.Control\n          placeholder=\"Enter a delegate's public key\"\n          ref={this.publicKeyRef}\n          onChange={this.updatePublicKey}\n        />\n      </Form.Group>\n    );\n  }\n}\n\nDelegateInput.propTypes = {};\n","import React, { PropTypes } from \"react\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nexport default class DataType extends React.Component {\n  state = {\n    labelValue: \"\",\n    labelPlaceholder: \"\",\n    labelVisible: false,\n    labelType: \"\"\n  };\n  constructor(props) {\n    super(props);\n  }\n  handleSelect = event => {\n    if (event.target.value === \"Plain text\") {\n      this.setState({\n        labelPlaceholder: \"enter a field label\",\n        labelVisible: true,\n        labelType: \"PlainText\"\n      });\n    } else if (event.target.value === \"file\") {\n      this.setState({\n        labelPlaceholder: \"enter a name for the file\",\n        labelVisible: true,\n        labelType: \"file\"\n      });\n    }\n  };\n  handleLabelChange = event => {\n    this.setState({ fieldValue: event.target.value });\n    this.props.handleLabelChange(this.state.labelType, event.target.value);\n  };\n  render() {\n    return (\n      <>\n        <Form.Control as=\"select\" onChange={this.handleSelect}>\n          <option>choose</option>\n          <option>Plain text</option>\n          <option>file</option>\n        </Form.Control>\n        {this.state.labelVisible ? (\n          <Form.Control\n            placeholder={this.state.labelPlaceholder}\n            onChange={this.handleLabelChange}\n          />\n        ) : null}\n      </>\n    );\n  }\n}\n\nDataType.propTypes = {};\n","import Web3 from \"web3\";\n\nconst web3 = new Web3(\n  new Web3.providers.HttpProvider(\n    \"http://127.0.0.1:8545\"\n  )\n);\n\nconst byteCode =\n  \"\";\nconst contractAbi = [\n  {\n    constant: false,\n    inputs: [\n      { name: \"_documentId\", type: \"uint256\" },\n      { name: \"_policyId\", type: \"string\" },\n      { name: \"_deligatee\", type: \"string\" },\n      { name: \"_uploader\", type: \"string\" }\n    ],\n    name: \"deligateDocument\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [\n      { name: \"_documentId\", type: \"uint256\" },\n      { name: \"_delegatee\", type: \"string\" }\n    ],\n    name: \"isDeligatee\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [{ name: \"_username\", type: \"string\" }],\n    name: \"addDeligateeAccounts\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      { name: \"_username\", type: \"string\" },\n      { name: \"_nucypherPublic\", type: \"string\" }\n    ],\n    name: \"signUpUsername\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"_deligatee\", type: \"string\" }],\n    name: \"getDeligatedDocument\",\n    outputs: [{ name: \"\", type: \"uint256[]\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"_username\", type: \"string\" }],\n    name: \"getNucypherPublicKey\",\n    outputs: [{ name: \"\", type: \"string\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"_documentId\", type: \"uint256\" }],\n    name: \"getUploadedDocumentInfo\",\n    outputs: [\n      { name: \"\", type: \"string\" },\n      { name: \"\", type: \"string\" },\n      { name: \"\", type: \"string\" },\n      { name: \"\", type: \"string\" }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [\n      { name: \"_documentId\", type: \"uint256\" },\n      { name: \"_deligatee\", type: \"string\" }\n    ],\n    name: \"getDeligatedDocumentInfo\",\n    outputs: [\n      { name: \"\", type: \"string\" },\n      { name: \"\", type: \"string\" },\n      { name: \"\", type: \"string\" },\n      { name: \"\", type: \"string\" },\n      { name: \"\", type: \"string\" }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      { name: \"_cipherText\", type: \"string\" },\n      { name: \"_capsule\", type: \"string\" },\n      { name: \"_aliceVerifyingKey\", type: \"string\" },\n      { name: \"_alicePublicKey\", type: \"string\" },\n      { name: \"_uploader\", type: \"string\" }\n    ],\n    name: \"uploadADocument\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"_index\", type: \"uint256\" }],\n    name: \"getDelegteeUsername\",\n    outputs: [{ name: \"\", type: \"string\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"_username\", type: \"string\" }],\n    name: \"usernameAvailability\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"_uploader\", type: \"string\" }],\n    name: \"getUploadedDocuments\",\n    outputs: [{ name: \"\", type: \"uint256[]\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getNumberOfDeligatee\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\"\n  }\n];\nlet contract = new web3.eth.Contract(contractAbi);\nlet contractAddress;\n\n\nexport function deployContract(_privateKey, _callingObject) {\n  return new Promise(function(resolve, reject) {\n    let address = web3.eth.accounts.privateKeyToAccount(_privateKey).address;\n    contract\n      .deploy({ data: byteCode, arguments: [] })\n      .estimateGas({ from: address })\n      .then(async function(gasAmount) {\n        let gasPrice = await web3.eth.getGasPrice();\n        let gasValue = gasPrice * gasAmount;\n\n        let transaction = {\n          from: web3.utils.toChecksumAddress(address),\n          gas: gasAmount + 10,\n          data: contract.deploy({ data: byteCode, arguments: [] }).encodeABI()\n        };\n        let bal = await web3.eth.getBalance(address);\n        let requiredEth = gasValue;\n        let gasInEth = web3.utils.fromWei(requiredEth.toString());\n        if (bal > requiredEth) {\n          _callingObject.verifyTransaction(\n            transaction,\n            gasInEth,\n            \"SignIn User to Contract\",\n            function() {\n              let signPromise = web3.eth.accounts.signTransaction(\n                transaction,\n                _privateKey\n              );\n              // console.log(signPromise);\n              signPromise\n                .then(signedTx => {\n                  // console.log(signedTx);\n                  const sentTx = web3.eth.sendSignedTransaction(\n                    signedTx.raw || signedTx.rawTransaction\n                  );\n                  sentTx.on(\"receipt\", receipt => {\n                    resolve(receipt.contractAddress);\n                  });\n                  sentTx.on(\"transactionHash\", function(hash) {\n                    _callingObject.transactionMining(hash);\n                    // console.log(\"Allowance hash =\", hash);\n                  });\n                  sentTx.on(\"error\", err => {\n                    resolve(err);\n                  });\n                })\n                .catch(err => {\n                  console.error(err);\n                });\n            }\n          );\n        } else {\n          _callingObject.insufficientFunds(gasInEth);\n        }\n      });\n  });\n}\n\nexport async function connectToContract(_contractAddress) {\n  contract.options.address = _contractAddress;\n  contractAddress = _contractAddress;\n  return true;\n}\n\nexport async function deligateAccess(_username, _privateKey, _callingObject) {\n  return new Promise(function(resolve, reject) {\n    let address = web3.eth.accounts.privateKeyToAccount(_privateKey).address;\n    contract.methods\n        .addDeligateeAccounts(_username)\n        .estimateGas({\n          from: address\n        })\n        .then(async function(gasAmount) {\n          web3.eth.getGasPrice().then(function(gasPrice) {\n            let gasValue = gasPrice * gasAmount;\n\n            let transaction = {\n              from: web3.utils.toChecksumAddress(address),\n              to: web3.utils.toChecksumAddress(contractAddress),\n              gas: gasAmount + 10,\n              data: contract.methods\n                  .addDeligateeAccounts(_username)\n                  .encodeABI()\n            };\n\n            web3.eth.getBalance(address).then(bal => {\n              let requiredEth = gasValue;\n              let gasInEth = web3.utils.fromWei(requiredEth.toString());\n              // console.log(typeof requiredEth);\n              if (bal > requiredEth) {\n                _callingObject.verifyTransaction(\n                    transaction,\n                    gasInEth,\n                    \"Adding Delegatee\",\n                    function() {\n                      let signPromise = web3.eth.accounts.signTransaction(\n                          transaction,\n                          _privateKey\n                      );\n                      // console.log(signPromise);\n                      signPromise\n                          .then(signedTx => {\n                            // console.log(signedTx);\n                            const sentTx = web3.eth.sendSignedTransaction(\n                                signedTx.raw || signedTx.rawTransaction\n                            );\n                            sentTx.on(\"receipt\", receipt => {\n                              resolve(true);\n                            });\n                            sentTx.on(\"transactionHash\", function(hash) {\n                              _callingObject.transactionMining(hash);\n                              // console.log(\"Allowance hash =\", hash);\n                            });\n                            sentTx.on(\"error\", err => {\n                              resolve(err);\n                            });\n                          })\n                          .catch(err => {\n                            console.error(err);\n                          });\n                    }\n                );\n              } else {\n                _callingObject.insufficientFunds(gasInEth);\n              }\n            });\n          });\n        });\n  });\n}\n\n// async function testing() {\n//   let callingObject = {\n//     verifyTransaction: function(\n//       transaction,\n//       gasInEth,\n//       transactionName,\n//       callback\n//     ) {\n//       callback();\n//     },\n//     transactionMining: function(hash) {},\n//     insufficientFunds: function(eth) {}\n//   };\n//   deployContract(\n//     \"0x36B298BE4646D2044F02ADCD1AF39A9069EF798CA4EF6F439553AA05935AAE47\",\n//     callingObject\n//   );\n// }\n//\n// testing();\n","import axios from \"axios\";\nlet url = \"http://172.16.4.93:5000\";\n/*\n    Function to generate Key Pairs from PyUmbral Library\n    @return {object} : obj = {\n                                alicePrivateKey,\n                                alicePublicKey,\n                                aliceSigningKey,\n                                aliceVerifyingKey,\n                                aliceSigner\n                           }\n */\nasync function generateKeyPairs() {\n  let content = await axios.get(url + \"/generateKeys\");\n  content = content.data;\n  return {\n    alicePrivateKey: content.alicePrivate,\n    alicePublicKey: content.alicePublic,\n    aliceSigningKey: content.aliceSigning,\n    aliceVerifyingKey: content.aliceVerifying\n  };\n}\n\n/*\n    Function to encrypt ipfs hash using pyUmbral\n    @param {string} _hash : ipfs hash of the data uploaded\n    @param {string} _alicePublicKey\n    @return {object} : obj = {\n                                cipherText,\n                                capsule\n                                }\n */\nasync function encryptData(_hash, _alicePublicKey) {\n  let content = await axios.post(url + \"/encryptData\", {\n    alices_public_key: _alicePublicKey,\n    hash: _hash\n  });\n  content = content.data;\n  return {\n    cipherText: content.cipherText,\n    capsule: content.capsule\n  };\n}\n\n/*\n    Function to create a new Policy using pyUmbral\n    @param {string} _alicePrivateKey\n    @param {string} _aliceSigner\n    @param {string} _bobPublicKey\n    @return {string} policyId of the delegation\n*/\nasync function createPolicy(_alicePrivateKey, _aliceSigningKey, _bobPublicKey) {\n  let content = await axios.post(url + \"/createPolicy\", {\n    alices_private_key: _alicePrivateKey,\n    alices_signing_key: _aliceSigningKey,\n    bobs_public_key: _bobPublicKey\n  });\n  console.log(\"content:\", content);\n  return {\n    policyId: content.data.toString()\n  };\n}\nexport async function getContractAddress(dappName) {\n  let contractAddress = await axios.post(url + \"/getContractAddress\", {\n    dappName: dappName\n  });\n  return contractAddress.data;\n}\nexport async function setClientJson(dappName, clientJson) {\n  await axios.post(url + \"/setClientJson\", {\n    dappName: dappName,\n    clientJson: JSON.stringify(clientJson)\n  });\n}\nexport async function getClientJson(dappName) {\n  const res = await axios.post(url + \"/getClientJson\", {\n    dappName: dappName\n  });\n  console.log(\"Res\", res);\n  return res.data;\n}\n/*\n    Function to decrypt uploaded Document\n    @param {string} _cipherText\n    @param {string} _capsule\n    @param {string} _alicePrivateKey\n    @return {string} hash : ipfs hash of the document to be fetched\n */\nasync function decryptUploadedDocument(\n  _cipherText,\n  _capsule,\n  _alicePrivateKey\n) {\n  let content = await axios.post(url + \"/decryptUploaded\", {\n    alices_private_key: _alicePrivateKey,\n    capsule: _capsule,\n    cipherText: _cipherText\n  });\n  return {\n    hash: content.data\n  };\n}\n\n/*\n    Function to decrypt deligated document\n    @param {string} _alicePublicKey\n    @param {string} _aliceVerifyKey\n    @param {string} _bobPublicKey\n    @param {string} _bobPrivateKey\n    @param {string} _capsule\n    @param {string} _cipherText\n    @param {string} _policyId\n    @return {string} hash : ipfs hash of the document to be fetched\n */\nasync function decryptDeligatedDocument(\n  _alicePublicKey,\n  _aliceVerifyKey,\n  _bobPublicKey,\n  _bobPrivateKey,\n  _capsule,\n  _cipherText,\n  _policyId\n) {\n  let content = await axios.post(url + \"/decryptDelegated\", {\n    alices_public_key: _alicePublicKey,\n    alices_verifying_key: _aliceVerifyKey,\n    bobs_public_key: _bobPublicKey,\n    bobs_private_key: _bobPrivateKey,\n    capsule: _capsule,\n    cipherText: _cipherText,\n    policyId: _policyId - 1 + 1\n  });\n  // content = content.data;\n  return {\n    hash: content.data\n  };\n}\n\n// async function testing() {\n//     console.log(await encryptData('hello 1111', 'A9/F09ny8rzKFP5vutqJgddo83M0rqsZST4hd+D9cTXA'));\n//     console.log(await createPolicy('XzCwNou8Q0oS3ZyO84UUcYfeEnFECqYRR0nLFfZ9ei8=', 'WKcxN1Jh/Lu42hDN70tm4Qq/vtxiajaGAbc4vJvOF34=', 'Ak70lJFy656wf0SY9ddAKqdn4acxaDODYSrHVrqRxLLs'))\n//     console.log(await decryptDeligatedDocument('A9/F09ny8rzKFP5vutqJgddo83M0rqsZST4hd+D9cTXA',\n//         'A7rnudBcIBl25BGZP2xQusHIzLnS8qWHN0/HHKIa+ru7',\n//         'Ak70lJFy656wf0SY9ddAKqdn4acxaDODYSrHVrqRxLLs',\n//         'xLF5mpOfyhH1Sy8HbX0Bfl5oUN6oUTwNwH8hpNWWgxo=',\n//         'A9eVFHE1Q/PEJbgpu4jfZ50x1tmaIjlPZvibTI5zleZlAg7b/v4aYp8NuoQLD859UfLoXzNG/ki/pYoYsmY4glGeWXB++UWEGRgEoUj6mSlS4KT+TS9ce7Pld8EknHe5NZs=',\n//         'jfvOMVOGDZgV46csFEoCfa4th10wjA5QGWPpLf1MTCYMliYnbg==',\n//         0))\n// }\n//\n// testing();\n\nexport {\n  generateKeyPairs,\n  encryptData,\n  decryptDeligatedDocument,\n  decryptUploadedDocument,\n  createPolicy\n};\n","import Web3 from \"web3\";\n\nconst web3 = new Web3(\n  new Web3.providers.HttpProvider(\n    \"http://127.0.0.1:8545  \"\n  )\n);\n\nconst contractAbi = [\n  {\n    constant: false,\n    inputs: [\n      { name: \"_documentId\", type: \"uint256\" },\n      { name: \"_policyId\", type: \"string\" },\n      { name: \"_deligatee\", type: \"string\" },\n      { name: \"_uploader\", type: \"string\" }\n    ],\n    name: \"deligateDocument\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [\n      { name: \"_documentId\", type: \"uint256\" },\n      { name: \"_delegatee\", type: \"string\" }\n    ],\n    name: \"isDeligatee\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [{ name: \"_username\", type: \"string\" }],\n    name: \"addDeligateeAccounts\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      { name: \"_username\", type: \"string\" },\n      { name: \"_nucypherPublic\", type: \"string\" }\n    ],\n    name: \"signUpUsername\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"_deligatee\", type: \"string\" }],\n    name: \"getDeligatedDocument\",\n    outputs: [{ name: \"\", type: \"uint256[]\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"_username\", type: \"string\" }],\n    name: \"getNucypherPublicKey\",\n    outputs: [{ name: \"\", type: \"string\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"_documentId\", type: \"uint256\" }],\n    name: \"getUploadedDocumentInfo\",\n    outputs: [\n      { name: \"\", type: \"string\" },\n      { name: \"\", type: \"string\" },\n      { name: \"\", type: \"string\" },\n      { name: \"\", type: \"string\" }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [\n      { name: \"_documentId\", type: \"uint256\" },\n      { name: \"_deligatee\", type: \"string\" }\n    ],\n    name: \"getDeligatedDocumentInfo\",\n    outputs: [\n      { name: \"\", type: \"string\" },\n      { name: \"\", type: \"string\" },\n      { name: \"\", type: \"string\" },\n      { name: \"\", type: \"string\" },\n      { name: \"\", type: \"string\" }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      { name: \"_cipherText\", type: \"string\" },\n      { name: \"_capsule\", type: \"string\" },\n      { name: \"_aliceVerifyingKey\", type: \"string\" },\n      { name: \"_alicePublicKey\", type: \"string\" },\n      { name: \"_uploader\", type: \"string\" }\n    ],\n    name: \"uploadADocument\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"_index\", type: \"uint256\" }],\n    name: \"getDelegteeUsername\",\n    outputs: [{ name: \"\", type: \"string\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"_username\", type: \"string\" }],\n    name: \"usernameAvailability\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"_uploader\", type: \"string\" }],\n    name: \"getUploadedDocuments\",\n    outputs: [{ name: \"\", type: \"uint256[]\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getNumberOfDeligatee\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\"\n  }\n];\nlet contract;\nlet contractAddress;\n\n// TODO OK Tested\n/*\n    Function to Connect Contract with the contract address\n    @param {address} _contractAddress\n    @return {boolean}\n */\nasync function connectToContract(_contractAddress) {\n  contract = new web3.eth.Contract(contractAbi, _contractAddress);\n  contractAddress = _contractAddress;\n  return true;\n}\n\nasync function isDeligatee(_documentId, _delegatee) {\n  return new Promise(function(resolve, reject) {\n    contract.methods\n      .isDeligatee(_documentId, _delegatee)\n      .call()\n      .then(function(_boolean) {\n        console.log(\"from checkUsernameAvailability\", _boolean);\n        if (_boolean) {\n          resolve(_boolean);\n        } else {\n          resolve(_boolean);\n        }\n      });\n  });\n}\n\nasync function getNumberOfDeligatee() {\n  return new Promise(function(resolve, reject) {\n    contract.methods\n      .getNumberOfDeligatee()\n      .call()\n      .then(function(_num) {\n        resolve(_num);\n      });\n  });\n}\n\nasync function getDelegteeUsername(_idx) {\n  return new Promise(function(resolve, reject) {\n    contract.methods\n      .getDelegteeUsername(_idx)\n      .call()\n      .then(function(_name) {\n        resolve(_name);\n      });\n  });\n}\n\n// TODO OK Tested\n/*\n    Function to check if a certain username is available for use\n    @param {string} _username\n    @return {boolean} true if available and vice versa\n */\nasync function checkUsernameWeb3(_username) {\n  return new Promise(function(resolve, reject) {\n    contract.methods\n      .usernameAvailability(_username)\n      .call()\n      .then(function(_boolean) {\n        console.log(\"from checkUsernameAvailability\", _boolean);\n        if (_boolean) {\n          resolve(_boolean);\n        } else {\n          resolve(_boolean);\n        }\n      });\n  });\n}\n\n// TODO OK Tested\n/*\n    Function to signInUser to the contract to store his username to contract\n    @param {string} _username : Username of user to be added\n    @param {string} _privateKey : Ethereum Private Key of the Signer\n    @param {object} _callingObject : an Object to be used as events while execution\n\n    _callingObject : {\n\n            verifyTransaction : function(transaction, gasInEth, transactionName, callback){\n                transaction {object} : for the transaction information\n                gasInEth {string} : for showing gas in eth to user\n                transactionName {string} : name of the transaction\n                callback {function} : function to be called if you want the transaction to be mined\n            },\n\n            transactionMining : function(hash){\n                hash {string} : hash of the transaction being mined to be used for etherscan link\n            },\n\n            insufficientFunds : function(eth){\n                eth {string} : eth which is required for this transaction\n            }\n\n        }\n\n */\nasync function signInUser(\n  _username,\n  _privateKey,\n  _alicePublicKey,\n  _callingObject\n) {\n  return new Promise(function(resolve, reject) {\n    let address = web3.eth.accounts.privateKeyToAccount(_privateKey).address;\n    contract.methods\n      .signUpUsername(_username, _alicePublicKey)\n      .estimateGas({\n        from: address\n      })\n      .then(async function(gasAmount) {\n        web3.eth.getGasPrice().then(function(gasPrice) {\n          let gasValue = gasPrice * gasAmount;\n\n          let transaction = {\n            from: web3.utils.toChecksumAddress(address),\n            to: web3.utils.toChecksumAddress(contractAddress),\n            gas: gasAmount + 10,\n            data: contract.methods\n              .signUpUsername(_username, _alicePublicKey)\n              .encodeABI()\n          };\n\n          web3.eth.getBalance(address).then(bal => {\n            let requiredEth = gasValue;\n            let gasInEth = web3.utils.fromWei(requiredEth.toString());\n            // console.log(typeof requiredEth);\n            if (bal > requiredEth) {\n              _callingObject.verifyTransaction(\n                transaction,\n                gasInEth,\n                \"SignIn User to Contract\",\n                function() {\n                  let signPromise = web3.eth.accounts.signTransaction(\n                    transaction,\n                    _privateKey\n                  );\n                  // console.log(signPromise);\n                  signPromise\n                    .then(signedTx => {\n                      // console.log(signedTx);\n                      const sentTx = web3.eth.sendSignedTransaction(\n                        signedTx.raw || signedTx.rawTransaction\n                      );\n                      sentTx.on(\"receipt\", receipt => {\n                        resolve(true);\n                      });\n                      sentTx.on(\"transactionHash\", function(hash) {\n                        _callingObject.transactionMining(hash);\n                        // console.log(\"Allowance hash =\", hash);\n                      });\n                      sentTx.on(\"error\", err => {\n                        resolve(err);\n                      });\n                    })\n                    .catch(err => {\n                      console.error(err);\n                    });\n                }\n              );\n            } else {\n              _callingObject.insufficientFunds(gasInEth);\n            }\n          });\n        });\n      });\n  });\n}\n\nasync function getDelegateePublicKey(_delegatee) {\n  return new Promise(function(resolve, reject) {\n    contract.methods\n      .getNucypherPublicKey(_delegatee)\n      .call()\n      .then(function(_bobPublicKey) {\n        resolve(_bobPublicKey);\n      });\n  });\n}\n\n// TODO can't fetch return value. Either use as it is or make an event in solidity\n/*\n    Function to upload a document to the network without setting any deligatee\n    @param {string} _cipherText : cipher text from pyUmbral\n    @param {string} _capsule : capsule from pyUmbral\n    @param {string} _aliceVerifyKey : alice's verifying key\n    @param {string} _alicePublicKey : alice's public key\n    @param {string} _uploader : username of uploader of the document\n    @param {string} _privateKey : private key of the signer\n    @param {object} _callingObject : an Object to be used as events while execution\n\n    @return {number} documentId : this is the unique document id returned from the contract\n\n    _callingObject : {\n\n            verifyTransaction : function(transaction, gasInEth, transactionName, callback){\n                transaction {object} : for the transaction information\n                gasInEth {string} : for showing gas in eth to user\n                transactionName {string} : name of the transaction\n                callback {function} : function to be called if you want the transaction to be mined\n            },\n\n            transactionMining : function(hash){\n                hash {string} : hash of the transaction being mined to be used for etherscan link\n            },\n\n            insufficientFunds : function(eth){\n                eth {string} : eth which is required for this transaction\n            }\n\n        }\n */\nasync function uploadADocument(\n  _cipherText,\n  _capsule,\n  _aliceVerifyKey,\n  _alicePublicKey,\n  _uploader,\n  _privateKey,\n  _callingObject\n) {\n  console.log(\"inside uploadDocument\");\n  console.log(\"_cipherText\", _cipherText);\n  console.log(\"_capsule\", _capsule);\n  console.log(\"_aliceVerifyKey\", _aliceVerifyKey);\n  console.log(\"uploader\", _uploader);\n  console.log(\"_alicePublicKey\", _alicePublicKey);\n  console.log(\"_privateKey\", _privateKey);\n\n  return new Promise(function(resolve, reject) {\n    console.log('inside upload document');\n    let address = web3.eth.accounts.privateKeyToAccount(_privateKey).address;\n    contract.methods\n      .uploadADocument(\n        _cipherText,\n        _capsule,\n        _aliceVerifyKey,\n        _alicePublicKey,\n        _uploader\n      )\n      .estimateGas({\n        from: address\n      })\n      .then(async function(gasAmount) {\n        console.log(\"gasAmount\", gasAmount);\n        web3.eth.getGasPrice().then(function(gasPrice) {\n          let gasValue = gasPrice * gasAmount;\n\n          let transaction = {\n            from: web3.utils.toChecksumAddress(address),\n            to: web3.utils.toChecksumAddress(contractAddress),\n            gas: gasAmount + 1000,\n            data: contract.methods\n              .uploadADocument(\n                _cipherText,\n                _capsule,\n                _aliceVerifyKey,\n                _alicePublicKey,\n                _uploader\n              )\n              .encodeABI()\n          };\n\n          web3.eth.getBalance(address).then(bal => {\n            let requiredEth = gasValue + 1000;\n            let gasInEth = web3.utils.fromWei(requiredEth.toString());\n            console.log(typeof requiredEth);\n            if (bal > requiredEth) {\n              _callingObject.verifyTransaction(\n                transaction,\n                gasInEth,\n                \"Upload Document to Contract\",\n                function() {\n                  let signPromise = web3.eth.accounts.signTransaction(\n                    transaction,\n                    _privateKey\n                  );\n                  console.log(signPromise);\n                  signPromise\n                    .then(signedTx => {\n                      console.log(signedTx);\n                      const sentTx = web3.eth.sendSignedTransaction(\n                        signedTx.raw || signedTx.rawTransaction\n                      );\n                      sentTx.on(\"receipt\", async receipt => {\n                        console.log(receipt);\n                        resolve(receipt);\n                      });\n                      sentTx.on(\"transactionHash\", function(hash) {\n                        _callingObject.transactionMining(hash);\n                        console.log(\"Allowance hash =\", hash);\n                      });\n                      sentTx.on(\"error\", err => {\n                        console.error(err);\n                        resolve(false);\n                      });\n                    })\n                    .catch(err => {\n                      console.error(err);\n                    });\n                }\n              );\n            } else {\n              _callingObject.insufficientFunds(gasInEth);\n            }\n          });\n        });\n      });\n  });\n}\n\n// TODO Ok Tested\n/*\n    Function to deligate a document to someone\n    @param {string} _documentId : unique document id returned by contract\n    @param {string} _policyId   : policy id from nucypher network\n    @param {string} _deligatee  : username of the deligatee who gets access\n    @param {string} _uploader   : username of the uploader\n    @param {string} _privateKey : private key of the signer\n    @param {object} _callingObject : an Object to be used as events while execution\n\n    @return {number} documentId : this is the unique document id returned from the contract\n\n    _callingObject : {\n\n            verifyTransaction : function(transaction, gasInEth, transactionName, callback){\n                transaction {object} : for the transaction information\n                gasInEth {string} : for showing gas in eth to user\n                transactionName {string} : name of the transaction\n                callback {function} : function to be called if you want the transaction to be mined\n            },\n\n            transactionMining : function(hash){\n                hash {string} : hash of the transaction being mined to be used for etherscan link\n            },\n\n            insufficientFunds : function(eth){\n                eth {string} : eth which is required for this transaction\n            }\n\n        }\n */\nasync function deligateDocument(\n  _documentId,\n  _policyId,\n  _deligatee,\n  _uploader,\n  _privateKey,\n  _callingObject\n) {\n  return new Promise(function(resolve, reject) {\n    console.log(_documentId);\n    console.log(_policyId);\n    console.log(_deligatee);\n    console.log(_uploader);\n    console.log(_privateKey);\n    console.log(_callingObject);\n    _policyId = _policyId.policyId;\n    let address = web3.eth.accounts.privateKeyToAccount(_privateKey).address;\n    contract.methods\n      .deligateDocument(_documentId, _policyId, _deligatee, _uploader)\n      .estimateGas({\n        from: address\n      })\n      .then(async function(gasAmount) {\n        web3.eth.getGasPrice().then(function(gasPrice) {\n          let gasValue = gasPrice * gasAmount;\n\n          let transaction = {\n            from: web3.utils.toChecksumAddress(address),\n            to: web3.utils.toChecksumAddress(contractAddress),\n            gas: gasAmount + 1000,\n            data: contract.methods\n              .deligateDocument(_documentId, _policyId, _deligatee, _uploader)\n              .encodeABI()\n          };\n\n          web3.eth.getBalance(address).then(bal => {\n            let requiredEth = gasValue + 1000;\n            let gasInEth = web3.utils.fromWei(requiredEth.toString());\n            console.log(typeof requiredEth);\n            if (bal > requiredEth) {\n              _callingObject.verifyTransaction(\n                transaction,\n                gasInEth,\n                \"Upload Document to Contract\",\n                function() {\n                  let signPromise = web3.eth.accounts.signTransaction(\n                    transaction,\n                    _privateKey\n                  );\n                  console.log(signPromise);\n                  signPromise\n                    .then(signedTx => {\n                      console.log(signedTx);\n                      const sentTx = web3.eth.sendSignedTransaction(\n                        signedTx.raw || signedTx.rawTransaction\n                      );\n                      sentTx.on(\"receipt\", receipt => {\n                        console.log(receipt);\n                        resolve(receipt);\n                      });\n                      sentTx.on(\"transactionHash\", function(hash) {\n                        _callingObject.transactionMining(hash);\n                        console.log(\"Allowance hash =\", hash);\n                      });\n                      sentTx.on(\"error\", err => {\n                        resolve(false);\n                      });\n                    })\n                    .catch(err => {\n                      console.error(err);\n                    });\n                }\n              );\n            } else {\n              _callingObject.insufficientFunds(gasInEth);\n            }\n          });\n        });\n      });\n  });\n}\n\n// TODO OK Tested\n/*\n    Function to get the list of documents uploaded by a particular username in the form of document ids\n    @param {string} _uploader : username of the uploader of the document\n    @param {string} _privateKey : privateKey of the uploader\n    @return {number[]} : array of all the document ids uploaded by the _uploader\n */\nasync function getUploadedDocumentIds(_uploader, _privateKey) {\n  return new Promise(function(resolve, reject) {\n    let address = web3.eth.accounts.privateKeyToAccount(_privateKey).address;\n    contract.methods\n      .getUploadedDocuments(_uploader)\n      .call({\n        from: address\n      })\n      .then(function(array) {\n        let rv = array.map(ele => ele - 1 + 1);\n        resolve(rv);\n      });\n  });\n}\n\n// TODO Ok Tested\n/*\n    Function to get the list of documents deligated to the user\n    @param {string} _deligatee : username of the deligatee of the document\n    @param {string} _privateKey : privateKey of the deligatee\n    @return {number[]} : array of all the document ids deligated to the deligatee\n */\nasync function getDeligatedDocumentIds(_deligatee, _privateKey) {\n  return new Promise(function(resolve, reject) {\n    let address = web3.eth.accounts.privateKeyToAccount(_privateKey).address;\n    contract.methods\n      .getDeligatedDocument(_deligatee)\n      .call({\n        from: address\n      })\n      .then(function(array) {\n        let rv = array.map(ele => ele - 1 + 1);\n        resolve(rv);\n      });\n  });\n}\n\n// TODO Ok Tested\n/*\n    Function to fetch the information regarding an uploaded document using a document id\n    @param {string} _documentId : unique Id of the document to be fetched\n    @param {string} _privateKey : privateKey of the uploader of the document\n    @return {object} : Example {\n                                    cipherText,\n                                    capsule,\n                                    verifyKey,\n                                    publicKey\n                                }\n */\nasync function getUploadedDocumentInfo(_documentId, _privateKey) {\n  return new Promise(function(resolve, reject) {\n    let address = web3.eth.accounts.privateKeyToAccount(_privateKey).address;\n    contract.methods\n      .getUploadedDocumentInfo(_documentId)\n      .call({\n        from: address\n      })\n      .then(function(response) {\n        let rv = {\n          cipherText: response[\"0\"],\n          capsule: response[\"1\"],\n          verifyKey: response[\"2\"],\n          publicKey: response[\"3\"]\n        };\n        resolve(rv);\n      });\n  });\n}\n\n/*\n    Function to fetch the information regarding a deligated document\n    @param {string} _documentId : unique Id of the document to be fetched\n    @param {string} _deligatee : username of the deligatee\n    @param {string} _privateKey : privateKey of the deligatee of the document\n    @return {object} : Example {\n                                    cipherText,\n                                    capsule,\n                                    verifyKey,\n                                    publicKey,\n                                    policyId\n                                }\n */\nasync function getDeligatedDocumentInfo(_documentId, _deligatee, _privateKey) {\n  return new Promise(function(resolve, reject) {\n    let address = web3.eth.accounts.privateKeyToAccount(_privateKey).address;\n    contract.methods\n      .getDeligatedDocumentInfo(_documentId, _deligatee)\n      .call({\n        from: address\n      })\n      .then(function(response) {\n        let rv = {\n          cipherText: response[\"0\"],\n          capsule: response[\"1\"],\n          verifyKey: response[\"2\"],\n          publicKey: response[\"3\"],\n          policyId: response[\"4\"]\n        };\n        resolve(rv);\n      });\n  });\n}\n\nexport {\n  getDeligatedDocumentInfo,\n  getUploadedDocumentInfo,\n  getDeligatedDocumentIds,\n  getUploadedDocumentIds,\n  deligateDocument,\n  uploadADocument,\n  signInUser,\n  checkUsernameWeb3,\n  connectToContract,\n  getDelegateePublicKey,\n  isDeligatee,\n  getNumberOfDeligatee,\n  getDelegteeUsername\n};\n\n/*\nFor Testing the functions\nasync function testing() {\n    await connectToContract('0x522d62c67b4da04fb55467a8071b0f7cff94b149');\n    // let bool = await uploadADocument('cipherText',\n    //     'capsule',\n    //     'verifykey',\n    //     'publicKey',\n    //     'arvind',\n    //     '0x36B298BE4646D2044F02ADCD1AF39A9069EF798CA4EF6F439553AA05935AAE47',\n    //     {\n    //         verifyTransaction: function (transaction, gasInEth, transactionName, callback) {\n    //             callback();\n    //         },\n    //         transactionMining: function (hash) {\n    //         },\n    //         insufficientFunds: function (eth) {\n    //         }\n    //     });\n    // console.log(bool, \"confirmation\");\n    // let ans = await web3.eth.getTransactionReceipt('0x8780aea43ec5b54b95cf7dca6c503d6af7a77c4cdbce64f4ad95ed0d87be63ab');\n    // let list = await getUploadedDocumentIds('arvind', '0x36B298BE4646D2044F02ADCD1AF39A9069EF798CA4EF6F439553AA05935AAE47');\n    let list = await getDeligatedDocumentInfo(1, 'kalra','0x36B298BE4646D2044F02ADCD1AF39A9069EF798CA4EF6F439553AA05935AAE47');\n    console.log(list);\n\n}\n\ntesting();\n */\n","import React, { PropTypes } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Navbar,\n  Nav,\n  Form,\n  Button\n} from \"react-bootstrap\";\nimport DelegateInput from \"./DelegateInput\";\nimport DataType from \"./DataType\";\nimport \"../../App.scss\";\nimport { deployContract } from \"../../connections/web3Dev\";\nimport { setClientJson } from \"../../connections/httpInteractions\";\n\nexport default class CreateAppForm extends React.Component {\n  state = {\n    delegates: [\"input-1\"],\n    delegateButtonState: false,\n    dataFields: [\"field-1\"],\n    dataFieldButtonDisabled: true,\n    delegateInfo: [{ username: \"\", publicKey: \"\" }],\n    dataInfo: [{ fieldName: \"\", fieldType: \"\" }]\n  };\n  constructor(props) {\n    super(props);\n\n    this.appNameRef = React.createRef();\n    this.adminPrivateKeyRef = React.createRef();\n  }\n  addDelegateInfo = () => {\n    this.setState(prevState => ({\n      delegateInfo: prevState.delegateInfo.concat([\n        { username: \"\", publicKey: \"\" }\n      ])\n    }));\n    this.addDelegate();\n  };\n  handleDelegaInfoChange = (id, username, publicKey) => {\n    const newDelegateprops = this.state.delegateInfo.map((delegate, idx) => {\n      if (id !== idx) {\n        return delegate;\n      }\n      return { ...delegate, username: username, publicKey: publicKey };\n    });\n    this.setState({ delegateInfo: newDelegateprops });\n  };\n\n  toggleButtonState = (button, bool) => {\n    if (button === \"delegateButtonState\") {\n      this.setState({ delegateButtonState: bool });\n    }\n    if (button === \"dataFieldButtonDisabled\") {\n      this.setState({ dataFieldButtonDisabled: bool });\n    }\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    console.log(this.appNameRef);\n    const clientAppJson = {};\n    clientAppJson.dataInfo = this.state.dataInfo;\n    clientAppJson.delegateInfo = this.state.delegateInfo;\n    localStorage.setItem(\"clientAppJson\", JSON.stringify(clientAppJson));\n    await setClientJson(this.appNameRef.current.value, clientAppJson);\n    // get private key\n    // deploy contract function\n    const adminPrivateKey = this.adminPrivateKeyRef.current.value;\n    const callingObject = {\n      verifyTransaction: (transaction, gasInEth, transactionName, callback) => {\n        console.log(transaction, gasInEth, transactionName);\n        callback();\n      },\n      transactionMining: hash => {\n        console.log(\"hash:\", hash);\n      },\n      insufficientFunds: () => {\n        console.log(\"insufficientFunds\");\n      }\n    };\n    const contractAddress = await deployContract(\n      adminPrivateKey,\n      callingObject\n    );\n    await fetch(\"http://172.16.4.93:5000/setContractAddress\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        contractAddress: contractAddress,\n        dappName: this.appNameRef.current.value\n      })\n    });\n    await localStorage.setItem(\"contractAddress\", contractAddress);\n\n    console.log(\"contract addess set\");\n    window.open(`/client-app/${this.appNameRef.current.value}`, \"_blank\");\n    //create a clientJson and store it in localstorage\n  };\n  addDelegate = () => {\n    const newDelegate = `input-${this.state.delegates.length + 1}`;\n    this.setState(prevState => ({\n      delegates: prevState.delegates.concat([newDelegate])\n    }));\n    console.log(this.delegateButton);\n  };\n\n  setDelegateInfo = delegateInfo => {\n    this.setState(prevState => ({\n      delegateInfo: prevState.delegateInfo.concat([delegateInfo])\n    }));\n  };\n  handleFieldChange = (id, fieldType, fieldName) => {\n    const newDataInfo = this.state.dataInfo.map((field, idx) => {\n      if (id !== idx) return field;\n      return { ...field, fieldType: fieldType, fieldName: fieldName };\n    });\n    this.setState({ dataInfo: newDataInfo });\n  };\n  addDataField = () => {\n    const newField = `field-${this.state.dataFields.length + 1}`;\n    console.log(newField);\n    this.setState(prevState => ({\n      dataFields: prevState.dataFields.concat([newField]),\n      dataInfo: prevState.dataInfo.concat({ fieldName: \"\", fieldType: \"\" })\n    }));\n  };\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col sm={12}>\n            <h1 className=\"title\"> EthDenver !!!! </h1>\n          </Col>\n        </Row>\n        <Form onSubmit={this.handleSubmit}>\n          <Row>\n            <Col>\n              <Form.Group controlId=\"appName\">\n                <Form.Control\n                  placeholder=\"Enter a name for your app\"\n                  ref={this.appNameRef}\n                />\n                <Form.Control\n                  controlId=\"adminPrivateKey\"\n                  placeholder=\"enter your private key\"\n                  ref={this.adminPrivateKeyRef}\n                />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={12}>\n              {this.state.dataFields.map((field, id) => {\n                return (\n                  <DataType\n                    key={id}\n                    handleLabelChange={(fieldType, fieldName) => {\n                      this.handleFieldChange(id, fieldType, fieldName);\n                    }}\n                  />\n                );\n              })}\n            </Col>\n            <Button\n              variant=\"primary\"\n              onClick={() => {\n                this.addDataField();\n              }}\n              disabled={false}\n            >\n              {\" \"}\n              Add another Data Field\n            </Button>\n          </Row>\n\n          <Row>\n            <Col sm={12}>\n              <Col sm={4}>\n                {this.state.delegates.map((input, id) => {\n                  return (\n                    <DelegateInput\n                      key={input}\n                      toggleButtonState={bool => {\n                        this.toggleButtonState(\"delegateButtonState\", bool);\n                      }}\n                      handleDelegaInfoChange={(username, publicKey) => {\n                        this.handleDelegaInfoChange(id, username, publicKey);\n                      }}\n                    />\n                  );\n                })}\n              </Col>\n            </Col>\n            <Col>\n              <Button\n                variant=\"primary\"\n                onClick={this.addDelegateInfo}\n                disabled={this.state.delegateButtonState}\n              >\n                Add a delegate\n              </Button>\n            </Col>\n            <Col sm={12}>\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nCreateAppForm.propTypes = {};\n","import React, { Component } from \"react\";\nimport logo from \"../logo.svg\";\nimport \"../App.scss\";\nimport CreateAppForm from \"./devApp/CreateAppForm\";\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\" />\n        <CreateAppForm />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { PropTypes } from \"react\";\nimport { Row, Col, Navbar, Nav } from \"react-bootstrap\";\nexport default class Header extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Row className=\"header\">\n        <Col>\n          <Navbar bg=\"light\">\n            <Nav as=\"ul\">\n              <Nav.Item as=\"li\">\n                <Nav.Link eventKey=\"disabled\">\n                  {\" \"}\n                  Welcome {localStorage.getItem(\"username\")}{\" \"}\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item as=\"li\">\n                <Nav.Link\n                  onClick={e => {\n                    this.props.changePanel(\"UploadPanel\");\n                  }}\n                >\n                  {\" \"}\n                  Upload{\" \"}\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item as=\"li\">\n                <Nav.Link\n                  onClick={e => {\n                    this.props.changePanel(\"ViewPanel\");\n                  }}\n                >\n                  {\" \"}\n                  view{\" \"}\n                </Nav.Link>\n              </Nav.Item>\n            </Nav>\n          </Navbar>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nHeader.propTypes = {};\n","import IPFS from \"ipfs-http-client\";\nimport { Buffer } from \"buffer\";\n\nconst ipfsNode = new IPFS({\n  host: \"ipfs.infura.io\",\n  port: 5001,\n  protocol: \"https\"\n});\n\n/*\n    Function to check if the ipfs node is connected\n    @return {boolean} : true when done\n */\nasync function connectNode() {\n  return new Promise(function(resolve, reject) {\n    resolve(true);\n  });\n}\n\n/*\n    Function to upload a json object to the ipfs network\n    @param {object} _json : in any format that is to be uploaded to the ipfs network\n    @return {string} ipfs path to the uploaded json\n */\nasync function uploadJSON(_json) {\n  console.log(_json);\n  let buffer = await Buffer.from(JSON.stringify(_json));\n  let ipfsResponse = await ipfsNode.add(buffer);\n  return ipfsResponse[0].path;\n}\n\n/*\n    Function to upload a file object to the ipfs network\n    @param {FileReader result} : _fileReader in any format that is to be uploaded to the ipfs network\n    @return {string} ipfs path to the uploaded file\n */\nasync function uploadFile(_fileReaderResult) {\n  let buffer = await Buffer.from(_fileReaderResult);\n  let ipfsResponse = await ipfsNode.add(buffer);\n  return ipfsResponse[0].path;\n}\n\n/*\n    Function to that will handle the upload of certain kind of data\n    @param {object[]} _array : Objects in the array should be of the form\n                                    obj = {\n                                        isFile : true only if it is some kind of file\n                                        name : name of the key against which some data is to be stored\n                                        value : value to be stored against above mentioned name\n                                    }\n    @return {string} : ipfs hash\n */\n\nasync function handleUpload(_array) {\n  let finalJsonToBeUploaded = {};\n  for (let i = 0; i < _array.length; i++) {\n    let element = _array[i];\n    if (element.isFile === true) {\n      let value = element.value;\n      let hash = await uploadFile(value);\n      let name = element.name;\n      finalJsonToBeUploaded[name] = hash;\n    } else {\n      finalJsonToBeUploaded[element.name] = element.value;\n    }\n  }\n  let hash = await uploadJSON(finalJsonToBeUploaded);\n  console.log(\"handle upload hash\", hash);\n  return hash;\n}\n\nasync function getFile(_path) {\n  let response = await ipfsNode.get(_path);\n  let content = response[0].content;\n  return content.toString();\n}\n\nexport async function getJson(_path) {\n  console.log(\"_path\", _path);\n  _path = _path.hash;\n  let response = await ipfsNode.get(\"/ipfs/\" + _path);\n  console.log(\"response\", response[0].content);\n  let content = response[0].content;\n  console.log(content);\n  let json = JSON.parse(content.toString());\n  console.log(json);\n  return json;\n}\n\nasync function getData(_path, _requestedArray) {\n  console.log(_requestedArray);\n  let dataArrayToBereturned = [];\n  let valueJson = await getJson(_path);\n  for (let i = 0; i < _requestedArray.length; i++) {\n    if (_requestedArray[i].isFile === true) {\n      let hash = valueJson[_requestedArray[i].name];\n      let url = `https://ipfs.io/ipfs/${hash}`;\n      console.log(\"generated url\", url);\n      let objToBePushed = {\n        isFile: true,\n        name: _requestedArray[i].name,\n        value: url\n      };\n      dataArrayToBereturned.push(objToBePushed);\n    } else {\n      let objToBePushed = {\n        isFile: false,\n        name: _requestedArray[i].name,\n        value: valueJson[_requestedArray[i].name]\n      };\n      dataArrayToBereturned.push(objToBePushed);\n    }\n  }\n  console.log(\"data Array from ipfs\", dataArrayToBereturned);\n  return dataArrayToBereturned;\n  console.log(dataArrayToBereturned);\n}\n\nexport { getData, handleUpload, connectNode };\n// async function testing() {\n//     await connectNode();\n//     // let test = [\n//     //     {\n//     //         isFile : false,\n//     //         name : 'Name',\n//     //         value : 'arvind'\n//     //     },\n//     //     {\n//     //         isFile : false,\n//     //         name : 'age',\n//     //         value : '21'\n//     //     }\n//     // ];\n//     // let hash = await handleSubmission(test);\n//     // let path = await  uploadJSON({\n//     //    hell : \"hello\"\n//     // });\n//     // console.log(path);\n//     let hash = await getJson('QmYFmvb4EyC7jWT2sjQviBjnkxEfrmeLdXuScxLLK8q1Pn');\n//     // console.log(hash);\n// }\n\n// testing();\n","import {\n  createPolicy,\n  decryptDeligatedDocument,\n  decryptUploadedDocument,\n  encryptData,\n  generateKeyPairs\n} from \"./httpInteractions\";\nimport {\n  checkUsernameWeb3,\n  connectToContract,\n  deligateDocument,\n  getDelegateePublicKey,\n  getDeligatedDocumentIds,\n  getDeligatedDocumentInfo,\n  getUploadedDocumentIds,\n  getUploadedDocumentInfo,\n  signInUser,\n  uploadADocument,\n  isDeligatee,\n  getNumberOfDeligatee,\n  getDelegteeUsername\n} from \"./web3Interactions\";\nimport { connectNode, getData, handleUpload } from \"./ipfsInteractions\";\n\nexport async function doConnections(_contractAddress) {\n  console.log(\"inside doConnections\");\n  console.log(\"contract address:\", _contractAddress);\n  await connectToContract(_contractAddress);\n  console.log(\"middle of doConnections\");\n  await connectNode();\n  console.log(\"end of doConnections\");\n}\n\nexport async function checkUsernameAvailability(_username) {\n  return await checkUsernameWeb3(_username);\n}\n\nexport async function signUpAndGetNucypherKeys(\n  _username,\n  _aliceEthereumPrivateKey,\n  _callingObject\n) {\n  let rv = await generateKeyPairs();\n  await signInUser(\n    _username,\n    _aliceEthereumPrivateKey,\n    rv.alicePublicKey,\n    _callingObject\n  );\n  return rv;\n}\n\nexport async function uploadDocument(\n  _array,\n  _uploader,\n  _alicePublicKey,\n  _aliceEthereumPrivateKey,\n  _aliceVerifyKey,\n  _callingObject\n) {\n  // Uploading the array of data to ipfs and fetch the hash\n  let hash = await handleUpload(_array);\n\n  // Now send this hash to be encrypted using pyUmbral\n  let { cipherText, capsule } = await encryptData(hash, _alicePublicKey);\n\n  // Send a transaction to contract to store all the information\n  await uploadADocument(\n    cipherText,\n    capsule,\n    _aliceVerifyKey,\n    _alicePublicKey,\n    _uploader,\n    _aliceEthereumPrivateKey,\n    _callingObject\n  );\n}\n\nexport async function grantDocumentAccess(\n  _documentId,\n  _alicePrivateKey,\n  _aliceSigningKey,\n  _deligatee,\n  _uploader,\n  _aliceEthereumPrivateKey,\n  _callingObject\n) {\n  // Fetch Bob's Public Key\n  let bobPublicKey = await getDelegateePublicKey(_deligatee);\n\n  // Generate a policy on the nucypherNetwork\n  let policyId = await createPolicy(\n    _alicePrivateKey,\n    _aliceSigningKey,\n    bobPublicKey\n  );\n\n  // Update the contract regarding delegation\n  await deligateDocument(\n    _documentId,\n    policyId,\n    _deligatee,\n    _uploader,\n    _aliceEthereumPrivateKey,\n    _callingObject\n  );\n}\n\nexport async function fetchUploadedDocuments(\n  _uploader,\n  _aliceEthereumPrivateKey,\n  _alicePrivateKey,\n  _requestedObject,\n  _documentUploadedCallback\n) {\n  // Fetch the list of documents uploaded by the _uploader\n  console.log(\"inside fetchUploadedDocuments\");\n  let arr = await getUploadedDocumentIds(_uploader, _aliceEthereumPrivateKey);\n  console.log(\"arr\", arr);\n  for (let i = 0; i < arr.length; i++) {\n    // Fetch information regarding the document\n    let {\n      cipherText,\n      capsule,\n      verifyKey,\n      publicKey\n    } = await getUploadedDocumentInfo(arr[i], _aliceEthereumPrivateKey);\n\n    // Use this info to generate the ipfs hash\n    let ipfsHash = await decryptUploadedDocument(\n      cipherText,\n      capsule,\n      _alicePrivateKey\n    );\n    console.log(\"ipfshash\", ipfsHash);\n\n    // Fetch data using generated ipfs hash\n    let dataArray = await getData(ipfsHash, _requestedObject);\n    console.log(dataArray);\n    _documentUploadedCallback(dataArray, arr[i]);\n  }\n}\n\nexport async function fetchDelegatedDouments(\n  _deligatee,\n  _aliceEthereumPrivateKey,\n  _alicePublicKey,\n  _alicePrivateKey,\n  _requestedObject,\n  _documentUploadedCallback\n) {\n  // Fetch the list of documents deligated to the _deligatee\n  console.log(\"inside fetchDelegatedDouments\");\n  let arr = await getDeligatedDocumentIds(_deligatee, _aliceEthereumPrivateKey);\n  console.log(\"arr:\", arr);\n  for (let i = 0; i < arr.length; i++) {\n    // Fetch information regarding the document\n\n    let {\n      cipherText,\n      capsule,\n      verifyKey,\n      publicKey,\n      policyId\n    } = await getDeligatedDocumentInfo(\n      arr[i],\n      _deligatee,\n      _aliceEthereumPrivateKey\n    );\n\n    // Use this info to generate the ipfs hash\n    let ipfsHash = await decryptDeligatedDocument(\n      publicKey,\n      verifyKey,\n      _alicePublicKey,\n      _alicePrivateKey,\n      capsule,\n      cipherText,\n      policyId\n    );\n    console.log(\"ipfs sfd\", ipfsHash);\n    // Fetch data using generated ipfs hash\n    let dataArray = await getData(ipfsHash, _requestedObject);\n    console.log(\"dataArray is awesome\", dataArray);\n    _documentUploadedCallback(dataArray);\n  }\n}\n\nexport async function getDelegatees() {\n  let usernames = [];\n  let number = await getNumberOfDeligatee();\n  for (let i = 0; i < number; i++) {\n    let username = await getDelegteeUsername(i);\n    usernames.push(username);\n  }\n  return usernames;\n}\n\nexport async function isDelegatee(_documentId, _delegatee) {\n  return await isDeligatee(_documentId, _delegatee);\n}\n","import React, { PropTypes } from \"react\";\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\nimport {\n  doConnections,\n  checkUsernameAvailability,\n  signUpAndGetNucypherKeys\n} from \"../../connections/Controller\";\nexport default class LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.usernameRef = React.createRef();\n    this.privateKeyRef = React.createRef();\n  }\n  async componentWillMount() {\n    // const contractAddress = localStorage.getItem(\"contractAddress\");\n    // await doConnections(contractAddress);\n    console.log(\"doConnections completed\");\n  }\n  setUser = async event => {\n    event.preventDefault();\n    const username = this.usernameRef.current.value;\n    const usernameAvailable = await checkUsernameAvailability(username);\n    if (usernameAvailable) {\n      const privateKey = this.privateKeyRef.current.value;\n      const callingObject = {\n        verifyTransaction: (\n          transaction,\n          gasInEth,\n          transactionName,\n          callback\n        ) => {\n          console.log(transaction, gasInEth, transactionName);\n          callback();\n        },\n        transactionMining: hash => {\n          console.log(\"hash:\", hash);\n        },\n        insufficientFunds: () => {\n          console.log(\"insufficientFunds\");\n        }\n      };\n      let {\n        alicePrivateKey,\n        alicePublicKey,\n        aliceSigningKey,\n        aliceVerifyingKey\n      } = await signUpAndGetNucypherKeys(username, privateKey, callingObject);\n      localStorage.setItem(\"alicePrivateKey\", alicePrivateKey);\n      localStorage.setItem(\"alicePublicKey\", alicePublicKey);\n      localStorage.setItem(\"aliceSigningKey\", aliceSigningKey);\n      localStorage.setItem(\"aliceVerifyingKey\", aliceVerifyingKey);\n\n      localStorage.setItem(\"username\", username);\n      localStorage.setItem(\"privateKey\", privateKey);\n      window.location.reload();\n    } else {\n      alert(\"username already taken\");\n    }\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <Form>\n              <Form.Group controlId=\"username\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Username\"\n                  ref={this.usernameRef}\n                />\n                <Form.Text className=\"text-muted\">\n                  Please enter A Username\n                </Form.Text>\n              </Form.Group>\n\n              <Form.Group controlId=\"privateKey\">\n                <Form.Label>private Key</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Private Key\"\n                  ref={this.privateKeyRef}\n                />\n                <Form.Text className=\"text-muted\">\n                  Please enter your Private Key(We will not share it with\n                  anyone)\n                </Form.Text>\n              </Form.Group>\n\n              <Button variant=\"primary\" type=\"submit\" onClick={this.setUser}>\n                Submit\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nLoginForm.propTypes = {};\n","import React from \"react\";\nimport { Form, Row, Col, Button, File } from \"react-bootstrap\";\nimport { uploadDocument } from \"../../connections/Controller\";\nimport { getClientJson } from \"../../connections/httpInteractions\";\nexport default class UploadPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fileRef = React.createRef();\n  }\n  state = {\n    clientAppJson: {},\n    formData: [],\n    generateForm: false\n  };\n  async componentWillMount() {\n    // const clientAppJson = JSON.parse(localStorage.getItem(\"clientAppJson\"));\n  }\n  async componentDidMount() {\n    const clientAppJson = await getClientJson(this.props.appName);\n    console.log(\"clientAppJson:\", clientAppJson);\n    this.setState({ clientAppJson: clientAppJson });\n    this.addFormFields();\n    this.setState({ generateForm: true });\n  }\n  getDelegates = () => {\n    return this.state.clientAppJson.delegateInfo;\n  };\n  getDataInfo = () => {\n    return this.state.clientAppJson.dataInfo;\n  };\n  addFormFields = () => {\n    const dataInfo = this.getDataInfo();\n    dataInfo.map((field, id) => {\n      const newField = {\n        fieldName: field.fieldName,\n        fieldValue: \"\",\n        isFile: field.fieldType === \"file\"\n      };\n      this.setState(prevState => ({\n        formData: prevState.formData.concat([newField])\n      }));\n    });\n  };\n  handleChange = id => event => {\n    console.log(id);\n    event.preventDefault();\n    const newFormData = this.state.formData.map((field, idx) => {\n      if (idx !== id) return field;\n\n      let obj = { ...field, fieldValue: event.target.value };\n\n      return obj;\n    });\n    console.log(\"newFormData\", newFormData);\n    this.setState({ formData: newFormData });\n  };\n  handleFile = id => event => {\n    event.preventDefault();\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(event.target.files[0]);\n    reader.onloadend = () => {\n      let newFormData = this.state.formData;\n\n      let readerresult = reader.result;\n\n      newFormData[id].fieldValue = readerresult;\n\n      this.setState({ formData: newFormData });\n    };\n  };\n  submitForm = async () => {\n    let array = this.state.formData.map(field => {\n      let obj = {};\n      obj.name = field.fieldName;\n      obj.value = field.fieldValue;\n      obj.isFile = field.isFile;\n      return obj;\n    });\n    const username = localStorage.getItem(\"username\");\n    const alicePublicKey = localStorage.getItem(\"alicePublicKey\");\n    const privateKey = localStorage.getItem(\"privateKey\");\n    const aliceVerifyingKey = localStorage.getItem(\"aliceVerifyingKey\");\n    const callingObject = {\n      verifyTransaction: (transaction, gasInEth, transactionName, callback) => {\n        console.log(transaction, gasInEth, transactionName);\n        callback();\n      },\n      transactionMining: hash => {\n        console.log(\"hash:\", hash);\n      },\n      insufficientFunds: () => {\n        console.log(\"insufficientFunds\");\n      }\n    };\n    console.log(\"array\", array);\n    console.log(\"username\", username);\n    console.log(\"alicePublicKey\", alicePublicKey);\n    console.log(\"privateKey\", privateKey);\n    console.log(\"aliceVerifyingKey\", aliceVerifyingKey);\n\n    await uploadDocument(\n      array,\n      username,\n      alicePublicKey,\n      privateKey,\n      aliceVerifyingKey,\n      callingObject\n    );\n  };\n  generateForm = () => {\n    const dataInfo = this.getDataInfo();\n    console.log(dataInfo);\n\n    return dataInfo.map((field, id) => {\n      console.log(field);\n      if (field.fieldType === \"PlainText\") {\n        return (\n          <Form.Control\n            key={field.fieldName + id.toString()}\n            placeholder={`enter your ${field.fieldName}`}\n            onChange={this.handleChange(id)}\n          />\n        );\n      } else {\n        return (\n          <Form.Group>\n            <Form.Label>{field.fieldName}</Form.Label>\n            <Form.Control\n              key={field.fieldName}\n              type=\"file\"\n              onChange={this.handleFile(id)}\n            />\n          </Form.Group>\n        );\n      }\n    });\n  };\n  render() {\n    return (\n      <Row>\n        <Col>\n          <Form>\n            <Form.Group controlId=\"uploadForm\">\n              {this.state.generateForm ? this.generateForm() : null}\n              <Button onClick={this.submitForm}>Submit</Button>\n            </Form.Group>\n          </Form>\n        </Col>\n      </Row>\n    );\n  }\n}\n","import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport {\n  getDelegatees,\n  isDelegatee,\n  grantDocumentAccess\n} from \"../../connections/Controller\";\nexport default class Document extends React.Component {\n  state = {\n    delegatees: [],\n    selectedDelegatees: []\n  };\n\n  async componentDidMount() {\n    console.log(this.props.dataArray);\n    if (!this.props.fetchedData) {\n      await this.fetchDelegatees();\n    }\n  }\n  displayData = data => {\n    console.log(\"data:\", data);\n    if (!data.isFile) {\n      return (\n        <p key={data.name}>\n          {data.name} <i>{data.value}</i>\n        </p>\n      );\n    } else {\n      return (\n        <a href={data.value} target=\"_blank\">\n          {data.name}\n        </a>\n      );\n    }\n  };\n  setDelegatees = async () => {\n    let alicePrivateKey = localStorage.getItem(\"alicePrivateKey\");\n    let aliceSigningKey = localStorage.getItem(\"aliceSigningKey\");\n    let uploader = localStorage.getItem(\"username\");\n    let aliceEthereumPrivateKey = localStorage.getItem(\"privateKey\");\n    let callingObject = {\n      verifyTransaction: (transaction, gasInEth, transactionName, callback) => {\n        console.log(transaction, gasInEth, transactionName);\n        callback();\n      },\n      transactionMining: hash => {\n        console.log(\"hash:\", hash);\n      },\n      insufficientFunds: () => {\n        console.log(\"insufficientFunds\");\n      }\n    };\n    this.state.selectedDelegatees.forEach(async delegatee => {\n      await grantDocumentAccess(\n        this.props.documentId,\n        alicePrivateKey,\n        aliceSigningKey,\n        delegatee,\n        uploader,\n        aliceEthereumPrivateKey,\n        callingObject\n      );\n    });\n  };\n  fetchDelegatees = async () => {\n    const allDelegatees = await getDelegatees();\n    let potentialDelegatees = [];\n    allDelegatees.forEach(async delegate => {\n      console.log(\"delegate:\", delegate);\n      let bool = await isDelegatee(this.props.documentId, delegate);\n      if (bool) {\n        return;\n      } else {\n        potentialDelegatees.push(delegate);\n        const username = localStorage.getItem(\"username\");\n        if (delegate !== username) {\n          this.setState(prevState => ({\n            delegatees: [...prevState.delegatees, delegate]\n          }));\n        }\n      }\n    });\n    return potentialDelegatees;\n  };\n  handleSelect = event => {\n    const name = event.target.name;\n    if (this.state.selectedDelegatees.indexOf(name) === -1) {\n      this.setState(prevState => ({\n        selectedDelegatees: prevState.selectedDelegatees.concat(name)\n      }));\n    } else {\n      let newDelegates = this.state.selectedDelegatees;\n      newDelegates.pop(name);\n      this.setState({ selectedDelegatees: newDelegates });\n    }\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <hr />\n        {this.props.dataArray.map((data, id) => {\n          return this.displayData(data);\n        })}\n        <h1>Select the delegatess from below</h1>\n        {this.state.delegatees.map((delegate, id) => {\n          return (\n            <Form.Check\n              type=\"checkbox\"\n              label={delegate}\n              key={delegate + id}\n              name={delegate}\n              onChange={this.handleSelect}\n            />\n          );\n        })}\n        {this.props.fetchedData\n          ? null\n          : [\n              this.state.delegatees.length > 0 ? (\n                <Button onClick={this.setDelegatees}>Grant access</Button>\n              ) : null\n            ]}\n      </React.Fragment>\n    );\n  }\n}\n\n// Document.propTypes = {};\n","import React from \"react\";\nimport { Button, Row, Col } from \"react-bootstrap\";\nimport {\n  getClientJson,\n  getContractAddress\n} from \"../../connections/httpInteractions\";\nimport Document from \"./Document\";\nimport {\n  fetchUploadedDocuments,\n  doConnections,\n  fetchDelegatedDouments\n} from \"../../connections/Controller\";\nexport default class ViewPanel extends React.Component {\n  state = {\n    dataArrays: [],\n    fetchingLabels: [],\n    fetchedDataArrays: []\n  };\n\n  async componentDidMount() {\n    console.log(\"view panel ksj\");\n    const clientAppJson = await getClientJson(this.props.appName);\n    console.log(\"clientAppJson:\", clientAppJson);\n    const dataInfo = clientAppJson.dataInfo;\n    console.log(dataInfo);\n    const contractAddress = await getContractAddress(this.props.appName);\n    await doConnections(contractAddress);\n    const fetchingLabels = dataInfo.map(field => {\n      // select isFile based on field.fieldType\n      console.log(\"viewpanel27\", field.fieldType);\n      return { name: field.fieldName, isFile: field.fieldType === \"file\" };\n    });\n    this.setState({ fetchingLabels: fetchingLabels });\n\n    const username = localStorage.getItem(\"username\");\n    const privateKey = localStorage.getItem(\"privateKey\");\n    const alicePrivateKey = localStorage.getItem(\"alicePrivateKey\");\n    const alicePublicKey = localStorage.getItem(\"alicePublicKey\");\n\n    console.log(\"connections done\");\n    fetchUploadedDocuments(\n      username,\n      privateKey,\n      alicePrivateKey,\n      fetchingLabels,\n      this.documentUploadedCallback\n    );\n    // console.log(\n    //   await getJson(\"QmdPwKejYqXkpxBZwWFzttsR7Mx4SAVgXzabyWrkgmYBQu\")\n    // );\n    fetchDelegatedDouments(\n      username,\n      privateKey,\n      alicePublicKey,\n      alicePrivateKey,\n      fetchingLabels,\n      this.documentFetchedCallback\n    );\n  }\n  documentFetchedCallback = (dataArray, documentId) => {\n    console.log(\"inside doucmentFetchedCallback\");\n    console.log(dataArray, documentId);\n    this.setState(prevState => ({\n      fetchedDataArrays: prevState.fetchedDataArrays.concat([\n        {\n          dataArray: dataArray,\n          documentId: documentId\n        }\n      ])\n    }));\n  };\n  documentUploadedCallback = async (dataArray, documentId) => {\n    console.log(dataArray, documentId);\n    this.setState(prevState => ({\n      dataArrays: prevState.dataArrays.concat([\n        {\n          dataArray: dataArray,\n          documentId: documentId\n        }\n      ])\n    }));\n  };\n\n  render() {\n    return (\n      <Row>\n        <Col md={12}>\n          <div>\n            {\" \"}\n            <h1> Documents you have uploaded </h1>\n          </div>\n          <Col>\n            {this.state.dataArrays.map((dataArray, id) => {\n              return (\n                <Document\n                  fetchedData={false}\n                  dataArray={dataArray.dataArray}\n                  documentId={dataArray.documentId}\n                  key={dataArray.documentId}\n                />\n              );\n            })}\n          </Col>\n        </Col>\n        <Col md={12}>\n          <div>\n            {\" \"}\n            <h1> Documents you have acess to </h1>\n          </div>\n          {this.state.fetchedDataArrays.map((dataArray, id) => {\n            return (\n              <Document\n                fetchedData={true}\n                dataArray={dataArray.dataArray}\n                documentId={dataArray.documentId}\n                key={dataArray.name + id.toString()}\n              />\n            );\n          })}\n        </Col>\n      </Row>\n    );\n  }\n}\n","import React, { PropTypes } from \"react\";\nimport \"../../App.scss\";\nimport Header from \"./Header\";\nimport LoginForm from \"./LoginForm\";\nimport UploadPanel from \"./UploadPanel\";\nimport ViewPanel from \"./ViewPanel\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { doConnections } from \"../../connections/Controller\";\nimport { getContractAddress } from \"../../connections/httpInteractions\";\nexport default class ClientApp extends React.Component {\n  state = {\n    username: \"\",\n    privateKey: \"\",\n    panel: \"UploadPanel\",\n    appname: \"\"\n  };\n  constructor(props) {\n    super(props);\n  }\n  async componentWillMount() {\n    console.log(\"ss\");\n    const username = localStorage.getItem(\"username\");\n    const privateKey = localStorage.getItem(\"privateKey\");\n    // const contractAddress = localStorage.getItem(\"contractAddress\");\n    const contractAddress = await getContractAddress(\n      this.props.match.params.appname\n    );\n    // console.log(\"resp\", resp);\n    await doConnections(contractAddress);\n    if (username) {\n      this.setState({\n        username: username,\n        privateKey: privateKey,\n        appname: this.props.match.params.appname\n      });\n    }\n  }\n  setPanel = panel => {\n    this.setState({ panel });\n  };\n\n  render() {\n    if (!this.state.username) {\n      return (\n        <Container>\n          <LoginForm />\n        </Container>\n      );\n    }\n    return (\n      <Container>\n        <Header\n          changePanel={panel => {\n            this.setPanel(panel);\n          }}\n        />\n        <Row>\n          <Col>\n            <h1 className=\"title\"> {this.state.appname}</h1>{\" \"}\n          </Col>\n        </Row>\n        {this.state.panel === \"UploadPanel\" ? (\n          <UploadPanel appName={this.props.match.params.appname} />\n        ) : (\n          <ViewPanel appName={this.props.match.params.appname} />\n        )}\n      </Container>\n    );\n  }\n}\n\nClientApp.propTypes = {};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport App from \"./App\";\n\nimport ClientApp from \"./ClientApp/ClientApp\";\nconst Router = props => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/client-app/:appname\" component={ClientApp} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport Router from \"./components/Router\";\nReactDOM.render(<Router />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}