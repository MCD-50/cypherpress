import Web3 from "web3";

const web3 = new Web3(
  new Web3.providers.HttpProvider(
    "https://ropsten.infura.io/ZWXhYfP2uIvdg1yKuQNY "
  )
);

const byteCode =
  "";
const contractAbi = [
  {
    constant: false,
    inputs: [
      { name: "_documentId", type: "uint256" },
      { name: "_policyId", type: "string" },
      { name: "_deligatee", type: "string" },
      { name: "_uploader", type: "string" }
    ],
    name: "deligateDocument",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      { name: "_username", type: "string" },
      { name: "_deligatee", type: "address" }
    ],
    name: "addDeligateeAccounts",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      { name: "_username", type: "string" },
      { name: "_nucypherPublic", type: "string" }
    ],
    name: "signUpUsername",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [{ name: "_deligatee", type: "string" }],
    name: "getDeligatedDocument",
    outputs: [{ name: "", type: "uint256[]" }],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [{ name: "_username", type: "string" }],
    name: "getNucypherPublicKey",
    outputs: [{ name: "", type: "string" }],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [{ name: "_documentId", type: "uint256" }],
    name: "getUploadedDocumentInfo",
    outputs: [
      { name: "", type: "string" },
      { name: "", type: "string" },
      { name: "", type: "string" },
      { name: "", type: "string" }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      { name: "_documentId", type: "uint256" },
      { name: "_deligatee", type: "string" }
    ],
    name: "getDeligatedDocumentInfo",
    outputs: [
      { name: "", type: "string" },
      { name: "", type: "string" },
      { name: "", type: "string" },
      { name: "", type: "string" },
      { name: "", type: "string" }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      { name: "_cipherText", type: "string" },
      { name: "_capsule", type: "string" },
      { name: "_aliceVerifyingKey", type: "string" },
      { name: "_alicePublicKey", type: "string" },
      { name: "_uploader", type: "string" }
    ],
    name: "uploadADocument",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [{ name: "_username", type: "string" }],
    name: "usernameAvailability",
    outputs: [{ name: "", type: "bool" }],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [{ name: "_uploader", type: "string" }],
    name: "getUploadedDocuments",
    outputs: [{ name: "", type: "uint256[]" }],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor"
  }
];
let contract = new web3.eth.Contract(contractAbi);

export function deployContract(_privateKey, _callingObject) {
  return new Promise(function(resolve, reject) {
    let address = web3.eth.accounts.privateKeyToAccount(_privateKey).address;
    contract
      .deploy({ data: byteCode, arguments: [] })
      .estimateGas({ from: address })
      .then(async function(gasAmount) {
        let gasPrice = await web3.eth.getGasPrice();
        let gasValue = gasPrice * gasAmount;

        let transaction = {
          from: web3.utils.toChecksumAddress(address),
          gas: gasAmount + 10,
          data: contract.deploy({ data: byteCode, arguments: [] }).encodeABI()
        };
        let bal = await web3.eth.getBalance(address);
        let requiredEth = gasValue;
        let gasInEth = web3.utils.fromWei(requiredEth.toString());
        if (bal > requiredEth) {
          _callingObject.verifyTransaction(
            transaction,
            gasInEth,
            "SignIn User to Contract",
            function() {
              let signPromise = web3.eth.accounts.signTransaction(
                transaction,
                _privateKey
              );
              // console.log(signPromise);
              signPromise
                .then(signedTx => {
                  // console.log(signedTx);
                  const sentTx = web3.eth.sendSignedTransaction(
                    signedTx.raw || signedTx.rawTransaction
                  );
                  sentTx.on("receipt", receipt => {
                    resolve(receipt.contractAddress);
                  });
                  sentTx.on("transactionHash", function(hash) {
                    _callingObject.transactionMining(hash);
                    // console.log("Allowance hash =", hash);
                  });
                  sentTx.on("error", err => {
                    resolve(err);
                  });
                })
                .catch(err => {
                  console.error(err);
                });
            }
          );
        } else {
          _callingObject.insufficientFunds(gasInEth);
        }
      });
  });
}

// async function testing() {
//   let callingObject = {
//     verifyTransaction: function(
//       transaction,
//       gasInEth,
//       transactionName,
//       callback
//     ) {
//       callback();
//     },
//     transactionMining: function(hash) {},
//     insufficientFunds: function(eth) {}
//   };
//   deployContract(
//     "0x36B298BE4646D2044F02ADCD1AF39A9069EF798CA4EF6F439553AA05935AAE47",
//     callingObject
//   );
// }
//
// testing();
